export BUCKET_NAME=stealth-air-datasets
export USERNAME=foo
export PASSWORD=pass
export SFTPGROUP=users

# If first time login, then crease user and mount GCS bucket
if ! getent passwd "$USERNAME" > /dev/null; then
    echo "Creating user as $USERNAME"
    # Add SFTP user and group
    useradd $USERNAME
    #addgroup $SFTPGROUP
    echo "$USERNAME:$PASSWORD" | chpasswd

    # Add directory for user with ownership
    mkdir -p "/home/$USERNAME"
    chown root:root "/home/$USERNAME"

    # GCSFuse Mount
    echo "Creating GCS Fuse for $BUCKET_NAME at /home/$USERNAME/gcs"
    mkdir "/home/$USERNAME/gcs"
    chown $USERNAME:$SFTPGROUP "/home/$USERNAME/gcs"
    su -c "gcsfuse $BUCKET_NAME /home/$USERNAME/gcs" "$USERNAME"

else
    echo "User already exists."
fi


# Add SSH keys to authorized_keys with valid permissions
userKeysQueuedDir="/home/$USERNAME/.ssh/keys"
if [ -d "$userKeysQueuedDir" ]; then
    userKeysAllowedFileTmp="$(mktemp)"
    userKeysAllowedFile="/home/$USERNAME/.ssh/authorized_keys"

    for publickey in "$userKeysQueuedDir"/*; do
        cat "$publickey" >> "$userKeysAllowedFileTmp"
    done

    # Remove duplicate keys
    sort < "$userKeysAllowedFileTmp" | uniq > "$userKeysAllowedFile"

    chown "$uid" "$userKeysAllowedFile"
    chmod 600 "$userKeysAllowedFile"

    ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N ''
    ssh-keygen -t rsa -b 4096 -f /etc/ssh/ssh_host_rsa_key -N ''

    # Restrict access from other users
    chmod 600 /etc/ssh/ssh_host_ed25519_key || true
    chmod 600 /etc/ssh/ssh_host_rsa_key || true

else
    echo "passed"
fi

exec /usr/sbin/sshd -D -e
